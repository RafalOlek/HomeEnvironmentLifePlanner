@page "/shoppingList"
@inject HttpClient client
@inject IJSRuntime js
@using HomeEnvironmentLifePlanner.Shared.Models
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@inject NavigationManager navigatorManager
@inject NotificationService NotificationService

<h2><RadzenIcon Icon="people" />Listy zakupów</h2>

@if (shoppingListHeaders == null)
{
    <text>@HomeEnvironmentLifePlanner.Client.Properties.Dictionary.sharedLoading</text>
}
else if (shoppingListHeaders.Count() == 0)
{
    <text>@HomeEnvironmentLifePlanner.Client.Properties.Dictionary.sharedNoRecords</text>
}
else
{
<RadzenGrid Data="@shoppingListHeaders" AllowFiltering="true" AllowPaging="true" AllowSorting="true" TItem="ShoppingListHeader" RowSelect="@(args => SLHRowSelectionChanged(args))" Value="@shoppingListHeader" PageSize="50">
    <Columns>

        <RadzenGridColumn TItem="ShoppingListHeader" Property="SlH_Id" Title="ID" Width="80px" />
        <RadzenGridColumn TItem="ShoppingListHeader" Title="Numer listy zakupów">
            <Template Context="slh">
                <p style="white-space:pre-wrap">@String.Concat(slh.SlH_Number.ToString("D4"),"/",slh.SlH_Month.ToString("D2"),"/",slh.SlH_Year.ToString())</p>
            </Template>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="ShoppingListHeader" Property="SlH_Date" Title="Data listy zakupów:" Format="date" />

        <RadzenGridColumn TItem="ShoppingListHeader" Context="shoppingListHeader" Title="Akcje" Width="160px">

        </RadzenGridColumn>
    </Columns>
</RadzenGrid>

}
@code 
{
    ShoppingListHeader shoppingListHeader = null;

    IEnumerable<ShoppingListHeader> shoppingListHeaders { get; set; }
    protected override async Task OnInitializedAsync()
    {
        try
        {
            shoppingListHeaders = await client.GetFromJsonAsync<IEnumerable<ShoppingListHeader>>("api/shoppingList/headerList");
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }
    async Task SLHRowSelectionChanged(ShoppingListHeader slh)
    {
        shoppingListHeader = slh;
    }


}
